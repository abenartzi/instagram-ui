{"version":3,"sources":["Images/headerImage/instagramLogo.png","Header/Header.js","Feed/Post/TagList/TagList.js","Feed/Post/Post.js","Feed/Feed.js","Profile/Profile.js","Settings/Settings.js","models/post.model.js","CreatePost/InputTag/InputTag.js","CreatePost/UploadBtn/UploadBtn.js","config/index.js","config/development.js","config/production.js","CreatePost/CreatePost.js","Registration/Registration.js","Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","className","bg","expand","to","src","alt","logo","Toggle","aria-controls","Collapse","id","Nav","Component","TagList","this","props","tags","map","tag","i","key","href","Post","doLike","console","log","setState","liked","state","icon","faCalendarAlt","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","date","getDate","timeConverter","created","faUserCircle","size","image","imageId","title","faHeart","style","color","onClick","bind","likes","Feed","posts","loading","fetch","then","res","json","override","css","sizeUnit","post","Profile","Settings","schema","yup","shape","min","max","required","InputTag","inputKeyDown","e","val","target","value","find","toLowerCase","preventDefault","tagInput","removeTag","length","newTags","splice","type","faTimesCircle","onKeyDown","ref","c","placeholder","maxLength","UploadBtn","name","htmlFor","faCloudUploadAlt","env","development","apiURL","production","CreatePost","values","data","FormData","append","config","method","body","catch","err","initialValues","validationSchema","postModel","onSubmit","submit","render","setFieldValue","onChange","event","currentTarget","files","component","as","spellCheck","Button","faShare","Registration","aria-describedby","Login","App","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62c45f84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instagramLogo.0a3a43fb.png\";","import React, {Component} from 'react';\nimport './Header.scss'\nimport {Link} from \"react-router-dom\";\nimport logo from \"../Images/headerImage/instagramLogo.png\"\nimport { Navbar, Nav} from 'react-bootstrap'\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <Navbar className=\"fixedNav\" bg=\"light\" expand=\"lg\">\n                <Link className=\"nav-link\" to=\"/\">\n                    <img  src=\"https://img.icons8.com/nolan/64/000000/instagram-new.png\" alt=\"#\"/>\n                    <div className=\"vl\"></div>\n                    <img className=\"instaLogo\" src={logo} alt=\"instagramLogo\"/>\n                </Link>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto navbar-nav\">\n                        <Link className=\"nav-link\" to=\"/post/create/\">Create Post</Link>\n                        <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n                        <Link className=\"nav-link\" to=\"/settings\">Settings</Link>\n\n                            <div className=\"mr-auto navbar-nav\">\n                                <Link className=\"nav-link\" to=\"/register\">Register</Link>\n                                <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                            </div>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;\n\n","import React, {Component} from 'react';\nclass TagList extends Component {\n    render() {\n        return (\n            <div >\n                {this.props.tags.map((tag,i) => {\n                    return <div key={i} className=\"tag\"><a href=\"#\">#{tag}</a></div>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TagList;","import React, {Component} from 'react';\nimport './Post.scss'\nimport TagList from \"./TagList/TagList\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faCalendarAlt, faHeart, faUserCircle} from '@fortawesome/free-solid-svg-icons'\nimport {Link} from \"react-router-dom\";\n\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            liked: false\n        }\n    }\n    doLike = () => {\n      console.log('clicked');\n        this.setState({liked:!this.state.liked})\n    };\n\n\n\n    render() {\n        function timeConverter(UNIX_timestamp) {\n            let a = new Date(UNIX_timestamp * 1000);\n            let months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n            let year = a.getFullYear();\n            let month = months[a.getMonth()];\n            let date = a.getDate();\n\n            let time = `${date} ${month} ${year}`;\n            return time;\n\n        }\n\n        return (\n            <div className=\"d-flex\">\n                <div className=\"card\">\n\n                    <div className=\"card-header\">\n                            <span className=\"cardDate\">\n                            <FontAwesomeIcon className={\"calIcon\"} icon={faCalendarAlt}/>\n                            <span className=\"card-text\">{timeConverter(this.props.created)}</span>\n                            </span>\n\n                        <Link to={\"/profile\"} href={\"#\"} className=\"card-title\"><FontAwesomeIcon className=\"userCircleIcon\" icon={faUserCircle} size=\"2x\"/></Link>\n                    </div>\n\n                    <div className=\"userImage\">\n                        <img src={this.props.image} alt={this.props.imageId}/>\n                    </div>\n\n                    <div className=\"card-body\">\n\n                        <div><h5 className=\"card-title\">{this.props.title}</h5></div>\n\n                        <footer className={'cardFooter'}>\n                            <TagList tags={this.props.tags}/>\n                            <div className=\"card-text\">\n                                <FontAwesomeIcon className=\"heartIcon\" icon={faHeart} style={{color:this.state.liked ? \"red\" : \"black\"}} onClick={this.doLike.bind(this)}/>{this.props.likes}</div>\n                        </footer>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport { css } from '@emotion/core';\nimport { GridLoader } from 'react-spinners';\n\nimport './Feed.scss';\nimport Post from \"./Post/Post\";\n\nclass Feed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts:[],\n            loading:false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        fetch('https://my-json-server.typicode.com/evyros/fake-api/posts')\n            .then(res => res.json())\n            .then(posts => {\n                this.setState({posts,loading:false})\n            })\n    }\n\n    render() {\n\n        const override = css`\n            display:block;\n            margin: 0 auto;\n            border-color:#5798ff;\n        `;\n\n\n        return (\n            <div>\n                <div className=\"loading\">\n                    {this.state.loading ?\n                        <div>\n                            <GridLoader\n                                css={override}\n                                sizeUnit={\"px\"}\n                                size={80}\n                                color={'#5798ff'}\n                                loading={this.state.loading}/>\n                        </div> : null\n                    }\n                </div>\n                <div className='container'>\n                    {this.state.posts.map(post =>{\n                        return <Post\n\n                            key={post.id}\n                            created={post.created}\n                            image={post.image}\n                            title={post.title}\n                            likes={post.likes}\n                            tags={post.tags}\n                        />\n\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Feed;\n","import React, {Component} from 'react';\nimport './Profile.scss'\n\nclass Profile extends Component {\n    render() {\n\n        return (\n            <div className=\"container \">\n            <div>\n                Profile\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, {Component} from 'react';\n\nclass Settings extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                Settings Page!\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import * as yup from 'yup';\nlet schema = yup.object().shape({\n    title:yup.string().min(2).max(255).required(),\n    image: yup.mixed().required(),\n    tags: yup.array()\n});\n\nexport default schema;","// https://medium.com/@jerrylowm/build-a-tags-input-react-component-from-scratch-1524f02acb9a\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nimport React, {Component} from 'react';\nimport './InputTag.scss'\nclass InputTag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags:[]\n        }\n    }\n\n    inputKeyDown = (e) => {\n        const val = e.target.value;\n        if(e.key === 'Enter' && val){\n            if (this.state.tags.find(tag => tag.toLowerCase() === val.toLowerCase())) {\n                return;\n            }\n            e.preventDefault();\n            this.setState({tags:[...this.state.tags, \"#\" + val]});\n            this.tagInput.value = null;\n        }else if(e.key === 'Backspace' && !val) {\n            this.removeTag(this.state.tags.length -1);\n        }\n    };\n\n    removeTag = (i) => {\n        const newTags = [ ...this.state.tags ];\n        newTags.splice(i, 1);\n        this.setState({ tags: newTags });\n    };\n\n\n    render() {\n        return (\n            <div className=\"input-tag\">\n                <ul className=\"input-tag_tags\">\n\n                    {this.state.tags.map((tag,i) => (\n                        <li key={tag}>\n                            {tag}\n                            <button type=\"button\" onClick={() => { this.removeTag(i); }}> <FontAwesomeIcon icon={faTimesCircle}/> </button>\n                        </li>\n                    ))}\n                    <li className=\"input-tag_tags_input\">\n                        <input type=\"text\" onKeyDown={this.inputKeyDown} ref={c => {this.tagInput = c; }} placeholder={\"Press enter to add tags\"} maxLength={20}/>\n\n                    </li>\n\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default InputTag;","import React, {Component} from 'react';\nimport { Field } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloudUploadAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nclass UploadBtn extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                {/*https://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/*/}\n                <Field className=\"inputfile\" id=\"image\" type=\"file\" name=\"image\"/>\n                <label htmlFor=\"file\"> <FontAwesomeIcon icon={faCloudUploadAlt}  /> <strong>Upload an image</strong></label>\n            </div>\n\n        );\n    }\n}\n\nexport default UploadBtn;\n","import development from \"./development\";\nimport production from \"./production\";\n\nconst env = {\n    development,\n    production\n};\n\nexport default env[process.env.NODE_ENV || 'development']","export default {\n    apiURL:'http://localhost:4000'\n};\n\n","export default {\n    apiURL:'http://localhost:4000'\n};\n\n","import React, {Component} from 'react';\nimport { Button } from \"react-bootstrap\";\nimport { Formik, Field, Form ,ErrorMessage} from 'formik';\nimport './CreatePost.scss'\nimport postModel from '../models/post.model'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faShare} from '@fortawesome/free-solid-svg-icons'\nimport InputTag from \"./InputTag/InputTag\";\nimport UploadBtn from \"./UploadBtn/UploadBtn\";\nimport config from \"../config\";\n\nclass CreatePost extends Component {\n    //After we enter all the data that we caught from Formik into Values onSubmit we send it with POST to the server.\n    //How to send a file...\n    submit(values) {\n        const data = new FormData();\n        for(let key in values) {\n            data.append(key, values[key]);\n        }\n        fetch(config.apiURL + '/api/posts', {\n            method:'POST',\n            body: data\n        }).then(res => res.json())\n            .then(post => console.log(post))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <div className=\"container main\">\n                <div className=\"CreatePost\">\n                <h2>Create Post</h2>\n                <Formik initialValues={{image:'', title:'',tags:[]}}\n                    validationSchema={postModel}\n                        onSubmit={this.submit.bind(this)}\n                    render={({setFieldValue}) =>{\n                        return <Form className=\"col-xs-12 col-sm-6\">\n                            <div className=\"form-group\">\n                                <input type=\"file\" name=\"image\" id=\"image\" onChange={(event) => {\n                                    setFieldValue('image',event.currentTarget.files[0]);\n                                }}/>\n                                <div className=\"container-fluid row\">\n                                    <ErrorMessage className=\"alert alert-danger\" name=\"image\" component=\"div\" />\n                                </div>\n                            </div>\n                            <UploadBtn/>\n                            <div className=\"row.form-group\">\n                                <label>Title:</label>\n                                <Field as={\"textarea\"} name=\"title\" className=\"form-control\" placeholder=\"Enter Title...\" spellCheck=\"false\" maxLength={256}/>\n                                <div className=\"container-fluid row\">\n                                    <ErrorMessage className=\"alert alert-danger mt-2 my-2\" name=\"title\" component=\"div\" />\n                                </div>\n                            </div>\n                            <div className=\"row.form-group\">\n                                <label>Tags:</label>\n                                {/*<Field name=\"tags\" className=\"form-control\" placeholder=\"Enter Tags...\"/>*/}\n                                <InputTag/>\n                            </div>\n                            <div className=\"row.form-group d-flex justify-content-end\">\n                                <Button type=\"submit\" className={\"shareBtn\"}> <FontAwesomeIcon icon={faShare}/>Share</Button> {/*Button from react bootstrap*/}\n\n                            </div>\n                        </Form>\n\n                    }}>\n\n                </Formik>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreatePost;","import React, {Component} from 'react';\nimport './Registration.scss'\n\nclass Registration extends Component {\n    render() {\n        return (\n            <div className=\"container main\">\n                <div className=\"heightPlaceholder\"></div>\n                    <h2>Registration</h2>\n                    <hr/>\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Name:</label>\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\"\n                               aria-describedby=\"emailHelp\"/>\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with\n                                anyone else.</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPassword1\">Username:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Password:</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputEmail1\"\n                               aria-describedby=\"emailHelp\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPassword1\">Birth Date:</label>\n                        <input type=\"date\" className=\"form-control\" id=\"exampleInputPassword1\"/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"exampleCheck1\">Gender: </label>\n                        <input className=\"gender\" name=\"gender\" type=\"radio\"  id=\"exampleCheck1\"/>Male\n                        <input className=\"gender\" name=\"gender\" type=\"radio\"  id=\"exampleCheck1\"/>Female\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default Registration;","import React, {Component} from 'react';\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className=\"container main\">\n                <div className=\"heightPlaceholder\">\n                    <h2>Login</h2>\n                    <hr/>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Feed from \"./Feed/Feed\";\nimport Profile from \"./Profile/Profile\";\nimport Settings from \"./Settings/Settings\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport CreatePost from \"./CreatePost/CreatePost\";\nimport Registration from \"./Registration/Registration\";\nimport Login from \"./Login/Login\";\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"App\">\n          <Header />\n            <main>\n                <Switch>\n                    <Route path=\"/login\">\n                        <Login/>\n                    </Route>\n                    <Route path=\"/register\">\n                        <Registration/>\n                    </Route>\n                    <Route path=\"/settings\">\n                        <Settings/>\n                    </Route>\n                    <Route path=\"/profile\">\n                        <Profile/>\n                    </Route>\n                    <Route path=\"/post/create\">\n                        <CreatePost/>\n                    </Route>\n                    <Route path=\"/\">\n                        <Feed/>\n                    </Route>\n                </Switch>\n            </main>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}