{"version":3,"sources":["Images/headerImage/instagramLogo.png","config/index.js","config/development.js","config/production.js","Header/UserBox/UserBox.js","Header/Header.js","Feed/Post/TagList/TagList.js","Feed/Post/Post.js","Feed/Feed.js","Profile/Profile.js","Settings/Settings.js","models/post.model.js","CreatePost/CreatePost.js","models/register.model.js","Registration/Registration.js","models/login.model.js","Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","env","development","apiURL","production","UserBox","props","state","user","fetch","config","credentials","then","res","json","setState","console","log","catch","e","this","document","cookie","Date","toString","username","className","onClick","userLogout","bind","to","Component","Header","Navbar","expand","Brand","src","alt","logo","Toggle","aria-controls","Collapse","id","Nav","inline","icon","faUserCircle","TagList","tags","map","tag","i","key","Post","doLike","liked","dateStr","date","getMonth","getDate","getFullYear","faCalendarAlt","formatDate","created","href","size","image","imageId","title","faHeart","style","color","likes","Feed","posts","loading","override","css","sizeUnit","post","_id","Profile","Settings","schema","yup","shape","min","max","required","CreatePost","values","data","FormData","Array","isArray","forEach","value","append","formData","convertToFormData","method","body","err","initialValues","validationSchema","postModel","onSubmit","submit","render","setFieldValue","type","name","onChange","event","currentTarget","files","htmlFor","faCloudUploadAlt","component","as","placeholder","spellCheck","maxLength","inputValue","handleTagsChange","Button","faShare","password","gender","birthDate","about","Register","JSON","stringify","headers","history","push","registerModel","withRouter","Login","incorrectLoginMessage","status","loginModel","App","path","Registration","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9eaeffd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instagramLogo.0a3a43fb.png\";","import development from \"./development\";\nimport production from \"./production\";\n\nconst env = {\n    development,\n    production\n};\n\nexport default env[process.env.NODE_ENV || 'development']\n\n","export default {\n    apiURL:'http://localhost:4000'\n};\n\n","export default {\n    apiURL:'https://instagram-api-abenartzi.herokuapp.com'\n\n};\n\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport config from \"../../config\";\nimport './UserBox.scss'\nclass UserBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null\n        }\n    }\n    componentDidMount() {\n        fetch(config.apiURL + '/api/users/me',{\n            credentials:\"include\"\n        })\n            .then(res => res.json())\n            .then(user => {\n                    this.setState({user})\n                    console.log('Success !')\n                })\n            .catch(e => console.log(e));\n    }\n    userLogout() {\n        this.setState({\n            user:null\n        });\n        document.cookie = \"user=; expires=\" + new Date().toString()\n        console.log('Logged out!');\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.state.user\n                    ? <div>\n                        <span>Hello {this.state.user.username}</span>\n                        <div  className='userLogout' onClick={this.userLogout.bind(this)}>Logout</div>\n                    </div>\n                    : <div className=\"d-flex\">\n                        <Link className=\"nav-link\" to=\"/register\">Register</Link>\n                        <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                    </div>\n                }\n            </div>\n\n        );\n    }\n}\n\nexport default UserBox;","import React, {Component} from 'react';\nimport './Header.scss'\nimport {Link} from \"react-router-dom\";\nimport logo from \"../Images/headerImage/instagramLogo.png\"\nimport { Navbar, Nav} from 'react-bootstrap'\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport config from \"../config\";\nimport UserBox from \"./UserBox/UserBox\";\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <Navbar expand=\"lg\" className=\"Header\">\n                <Navbar.Brand>\n                    <Link className=\"nav-link\" to=\"/\">\n                        <img  src=\"https://img.icons8.com/nolan/64/000000/instagram-new.png\" alt=\"#\"/>\n                        <div className=\"vl\"></div>\n                        <img className=\"instaLogo\" src={logo} alt=\"instagramLogo\"/>\n                    </Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"nav-link\" to=\"/post/create/\">Create Post</Link>\n                        <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n                        <Link className=\"nav-link\" to=\"/settings\">Settings</Link>\n\n                    </Nav>\n                    <div inline=\"true\">\n                        <div className=\"user\">\n                            <div className=\"user-avatar\">\n                                <FontAwesomeIcon icon={faUserCircle} />\n                            </div>\n\n                            <div className=\"user-text\">\n                                <UserBox/>\n                            </div>\n                        </div>\n                    </div>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;\n\n","import React, {Component} from 'react';\nimport \"./TagList.scss\"\nclass TagList extends Component {\n    render() {\n        return (\n            <div className=\"TagList\">\n                {this.props.tags.map((tag,i) => {\n                    return <div key={i} className=\"tag\"> #{tag}</div>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TagList;","import React, {Component} from 'react';\nimport './Post.scss'\nimport TagList from \"./TagList/TagList\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faCalendarAlt, faHeart, faUserCircle} from '@fortawesome/free-solid-svg-icons'\nimport {Link} from \"react-router-dom\";\nimport config from '../../config/'\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            liked: false\n        }\n    }\n    doLike = () => {\n      console.log('clicked');\n        this.setState({liked:!this.state.liked})\n    };\n    formatDate(dateStr) {\n        const date = new Date(dateStr);\n        const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n        return months[date.getMonth()] + ' ' + date.getDate() + ' ' + date.getFullYear();\n    }\n\n\n    render() {\n        // function timeConverter(UNIX_timestamp) {\n        //     let a = new Date(UNIX_timestamp * 1000);\n        //     let months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n        //     let year = a.getFullYear();\n        //     let month = months[a.getMonth()];\n        //     let date = a.getDate();\n        //\n        //     let time = `${date} ${month} ${year}`;\n        //     return time;\n        //\n        // }\n        return (\n            <div className=\"col-sm-12 col-md-4\">\n                    <article className=\"Post\">\n                        <header>\n                            <div className=\"Post-date\">\n                                <FontAwesomeIcon className={\"calIcon\"} icon={faCalendarAlt}/>\n                                {this.formatDate(this.props.created)}\n                            </div>\n                            <Link to={\"/profile\"} href={\"#\"}><FontAwesomeIcon icon={faUserCircle} size=\"2x\"/></Link>\n\n                        </header>\n                        <div className=\"Post-image\">\n                            <img src={config.apiURL + '/' + this.props.image} alt={this.props.imageId}/>\n                        </div>\n                        <div className=\"Post-content\" >\n                            <h1 className=\"Post-title\">{this.props.title}</h1>\n                            <TagList tags={this.props.tags}/>\n                        </div>\n                        <div className=\"Post-actions\">\n                            <FontAwesomeIcon className=\"heartIcon\" icon={faHeart} style={{color:this.state.liked ? \"red\" : \"black\"}} onClick={this.doLike.bind(this)}/>{this.props.likes}\n                        </div>\n                    </article>\n\n            </div>\n\n\n        );\n    }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport './Feed.scss';\nimport Post from \"./Post/Post\";\nimport { css } from '@emotion/core';\nimport { GridLoader } from 'react-spinners';\nimport config from \"../config\"\n\nclass Feed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts:[],\n            loading:false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        fetch(config.apiURL + '/api/posts')\n            .then(res => res.json())\n            .then(posts => {\n                this.setState({posts,loading:false})\n            })\n    }\n\n    render() {\n\n        const override = css`\n            display:block;\n            margin: 0 auto;\n            border-color:#5798ff;\n        `;\n\n\n        return (\n            <div className=\"Feed d-flex flex-wrap\">\n                    {this.state.loading ?\n                        <div className=\"loader\">\n                            <GridLoader\n                                css={override}\n                                sizeUnit={\"px\"}\n                                size={80}\n                                color={'#5798ff'}\n                                loading={this.state.loading}/>\n                        </div> :\n                        null\n                    }\n                    {this.state.posts.map(post =>{\n                        return <Post key={post._id}\n                                created={post.created}\n                                image={post.image}\n                                title={post.title}\n                                likes={post.likes}\n                                tags={post.tags}/>\n                    })}\n            </div>\n        );\n    }\n}\n\nexport default Feed;\n","import React, {Component} from 'react';\nimport './Profile.scss'\n\nclass Profile extends Component {\n    render() {\n\n        return (\n            <div className=\"container \">\n            <div>\n                Profile\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, {Component} from 'react';\n\nclass Settings extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                Settings Page!\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import * as yup from 'yup';\nlet schema = yup.object().shape({\n    title:yup.string().min(2).max(255).required(),\n    image: yup.mixed().required(),\n    tags: yup.array()\n});\n\nexport default schema;","import React, {Component} from 'react';\nimport { Button } from \"react-bootstrap\";\nimport { Formik, Field, Form ,ErrorMessage} from 'formik';\nimport postModel from '../models/post.model'\nimport './CreatePost.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faShare, faCloudUploadAlt} from '@fortawesome/free-solid-svg-icons'\nimport config from \"../config\";\nimport TagsInput from 'react-tagsinput'\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags:[],\n            tag: ''\n        }\n    }\n\n    //After we enter all the data that we caught from Formik into Values onSubmit we send it with POST to the server.\n    //How to send a file...\n\n    handleTagsChange(tags) {\n        this.setState({\n            tags: tags\n        });\n    }\n    handleChangeInput(tag) {\n        this.setState({tag})\n    }\n\n    convertToFormData(values) {\n        const data = new FormData();\n        for (let key in values) {\n            Array.isArray(values[key])\n                ? values[key].forEach(value => data.append(key + '[]', value))\n                : data.append(key, values[key]) ;\n        }\n        return data;\n    }\n\n    submit(values) {\n        const formData = this.convertToFormData(values);\n        fetch(config.apiURL + '/api/posts/', {\n            method:'POST',\n            body: formData,\n            credentials:\"include\"\n        }).then(res => res.json())\n            .then(post => console.log(post))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <div className=\"CreatePost\">\n                <h2>Create Post</h2>\n                <Formik initialValues={{image:'', title:'',tags:[]}}\n                    validationSchema={postModel}\n                        onSubmit={this.submit.bind(this)}\n                        render={({setFieldValue}) =>{\n                            return <Form className=\"col-xs-12 col-md-6\">\n                                <div className=\"row form-group\">\n                                    <input type=\"file\" name=\"image\" id=\"image\" onChange={(event) => {\n                                        setFieldValue('image',event.currentTarget.files[0]);\n                                    }}/>\n                                    <label htmlFor=\"image\" className=\"upload-button\">\n                                        <span>\n                                            <FontAwesomeIcon icon={faCloudUploadAlt}/>\n                                            Select an image\n                                        </span>\n                                    </label>\n                                    <div className=\"container-fluid row\">\n                                        <ErrorMessage className=\"alert alert-danger mt-2\" name=\"image\" component=\"div\" />\n                                    </div>\n                                </div>\n                                <div className=\"row form-group\">\n                                    <label>Title:</label>\n                                    <Field as={\"textarea\"} name=\"title\" className=\"form-control\" placeholder=\"Enter Title...\" spellCheck=\"false\" maxLength={256}/>\n                                    <ErrorMessage className=\"alert alert-danger mt-2 my-2\" name=\"title\" component=\"div\" />\n                                </div>\n                                <div className=\"row form-group\">\n                                    <label>Tags:</label>\n                                    <TagsInput value={this.state.tags}\n                                               inputValue={this.state.tag}\n                                               onChange={(tags) => {\n                                                     this.handleTagsChange(tags);\n                                                     setFieldValue( 'tags', tags);\n                                                }}\n                                                   className=\"tags-wrapper \"/>\n                                    <ErrorMessage className=\"alert alert-danger mt-2\" name=\"tags\" component=\"div\" />\n                                    <div><sub>Press Enter after inserting a tag</sub></div>\n                                    {/*<Field name=\"tags\" className=\"form-control\" placeholder=\"Enter Tags...\"/>*/}\n                                    {/*<InputTag/>*/}\n\n                                </div>\n                                <div className=\"row form-group d-flex justify-content-end\">\n                                    <Button type=\"submit\">\n                                        <FontAwesomeIcon icon={faShare}/>&nbsp;\n                                        Share\n                                    </Button> {/*Button from react bootstrap*/}\n\n                                </div>\n                        </Form>;\n\n                    }}>\n\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default CreatePost;","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    name: yup.string().min(2).max(255).required(),\n    username: yup.string().min(2).max(255).required(),\n    password: yup.string().min(2).max(16).required(),\n    gender: yup.string().required(),\n    birthDate: yup.date().required(),\n    about: yup.string()\n});\n\nexport default schema;","import React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport registerModel from '../models/register.model';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Register extends Component {\n\n    submit(values) {\n        fetch('http://localhost:4000/api/users', {\n            method: 'POST',\n            body: JSON.stringify(values),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(() => this.props.history.push('/'));\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Registration</h2>\n                <hr />\n                <Formik initialValues={{name: '', username: '', password: '', birthDate: new Date(), gender: 'm', about: ''}}\n                        validationSchema={registerModel}\n                        onSubmit={this.submit.bind(this)}>\n                    <Form className=\"col-xs-12 col-md-6\">\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"name\">Name:</label>\n                            <Field name=\"name\" id=\"name\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"name\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"username\">Username:</label>\n                            <Field name=\"username\" id=\"username\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"username\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"password\">Password:</label>\n                            <Field type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"password\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"birthDate\">Birth Date:</label>\n                            <Field type=\"date\" name=\"birthDate\" id=\"birthDate\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"birthDate\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"gender\">Gender:</label>\n                            <Field component=\"select\" name=\"birthDate\" id=\"gender\" className=\"form-control\">\n                                <option value=\"m\">Male</option>\n                                <option value=\"f\">Female</option>\n                            </Field>\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"birthDate\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"about\">About:</label>\n                            <Field as=\"textarea\" id=\"about\" name=\"about\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"about\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group d-flex justify-content-end\">\n                            <Button type=\"submit\">Register</Button>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Register);","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    username: yup.string().min(2).max(255).required(),\n    password: yup.string().min(2).max(16).required(),\n});\n\nexport default schema;","import React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport loginModel from '../models/login.model';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport config from '../config'\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            incorrectLoginMessage: false\n        };\n    }\n\n    submit(values) {\n        this.setState({incorrectLoginMessage: false});\n        fetch(config.apiURL + '/api/users/login', {\n            method: 'POST',\n            body: JSON.stringify(values),\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                this.props.history.push('/');\n            } else if(res.status === 403) {\n                this.setState({incorrectLoginMessage: true});\n            } else {\n                console.log('Unexpected error');\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Login</h2>\n                <hr />\n                <Formik initialValues={{username: '', password: ''}}\n                        validationSchema={loginModel}\n                        onSubmit={this.submit.bind(this)}>\n                    <Form className=\"col-xs-12 col-md-6\">\n                        {this.state.incorrectLoginMessage ? <div className=\"row alert alert-danger mt-2\">Incorrect username or password</div> : null}\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"username\">Username:</label>\n                            <Field name=\"username\" id=\"username\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"username\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"password\">Password:</label>\n                            <Field type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"password\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group d-flex justify-content-end\">\n                            <Button type=\"submit\">Login</Button>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Feed from \"./Feed/Feed\";\nimport Profile from \"./Profile/Profile\";\nimport Settings from \"./Settings/Settings\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    // Link\n} from \"react-router-dom\";\nimport CreatePost from \"./CreatePost/CreatePost\";\nimport Registration from \"./Registration/Registration\";\nimport Login from \"./Login/Login\";\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"App\">\n          <Header />\n            <main className=\"container main\">\n                <Switch>\n                    <Route path=\"/login\">\n                        <Login/>\n                    </Route>\n                    <Route path=\"/register\">\n                        <Registration/>\n                    </Route>\n                    <Route path=\"/settings\">\n                        <Settings/>\n                    </Route>\n                    <Route path=\"/profile\">\n                        <Profile/>\n                    </Route>\n                    <Route path=\"/post/create\">\n                        <CreatePost/>\n                    </Route>\n                    <Route path=\"/\">\n                        <Feed/>\n                    </Route>\n                </Switch>\n            </main>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}